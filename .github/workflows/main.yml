name: main

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          #- macos-10.15
          - windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2

      - name: Set SHORT_SHA env
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Cache Qt
        if: matrix.os != 'windows-latest'
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ${{ runner.workspace }}/Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          install-deps: 'true'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Set up Rust cache
        #if: matrix.os != 'windows-latest'
        uses: Swatinem/rust-cache@v1

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Prepare package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          export DEST=~/pkg-windows/vuk-${{ runner.os }}-$SHORT_SHA
          mkdir -p $DEST
          cp target/release/vuk.exe $DEST
          cp -r $QT_PLUGIN_PATH $DEST
          cp -r $QML2_IMPORT_PATH $DEST
          cp $Qt5_Dir/bin/*.dll $DEST
          rm -f $DEST/*d.dll
          rm -rf $DEST/plugins/geoservices
          rm -rf $DEST/plugins/sqldrivers

      - name: Prepare package (Linux)
        if: matrix.os != 'windows-latest'
        run: |
          export DEST=~/pkg-linux/vuk-${{ runner.os }}-$SHORT_SHA
          mkdir -p $DEST
          cp target/release/vuk $DEST

      - name: Upload build artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: vuk-pkg-windows
          path: '~/pkg-windows'

      - name: Upload build artifacts (Linux)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: vuk-pkg-linux
          path: '~/pkg-linux'

